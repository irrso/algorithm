from collections import deque

# input
N, M = map(int, input().split())
paper = [list(map(int, input().split())) for _ in range(N)]

# solve
dir = [[(0, 0), (0, 1), (0, 2), (0, 3)], [(0, 0), (1, 0), (2, 0), (3, 0)], # ㅡ

		[(0, 0), (0, 1), (1, 0), (1, 1)], # ㅁ

		[(0, 0), (1, 0), (2, 0), (2, 1)], [(0, 0), (1, 0), (2, 0), (2, -1)], # L
		[(0, 0), (0, 1), (1, 1), (2, 1)], [(0, 0), (0, -1), (1, -1), (2, -1)],
		[(0, 0), (1, 0), (1, 1), (1, 2)], [(0, 0), (1, 0), (1, -1), (1, -2)],
		[(0, 0), (0, 1), (0, 2), (1, 2)], [(0, 0), (0, -1), (0, -2), (1, -2)],
		
		[(0, 0), (0, 1), (0, 2), (1, 1)], [(0, 0), (0, 1), (0, 2), (-1, 1)], # ㅜ
		[(0, 0), (0, 1), (-1, 1), (1, 1)], [(0, 0), (0, -1), (-1, -1), (1, -1)],

		[(0, 0), (1, 0), (1, 1), (2, 1)], [(0, 0), (1, 0), (1, -1), (2, -1)], # ㄱㅡ
		[(0, 0), (0, -1), (1, -1), (1, -2)], [(0, 0), (0, 1), (1, 1), (1, 2)]]

ans = 0
for i in range(N):
	for j in range(M):
		for d in dir:
			temp = 0
			for dy, dx in d:
				ny = i+dy
				nx = j+dx
				if 0 <= ny < N and 0 <= nx < M:
					temp += paper[ny][nx]
				else:
					break
			ans = max(ans, temp)

print(ans)